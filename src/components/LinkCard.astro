---
export interface Props {
  url: string;
}

const { url } = Astro.props;

// URLからドメイン情報取得
const domain = new URL(url).hostname;

// サーバーサイドでメタデータ取得
let title = domain;
let description = "";
let thumbnail = null;
let siteName = domain;
let faviconUrl = null;

try {
  const controller = new AbortController();
  const timeout = setTimeout(() => controller.abort(), 2000);
  
  const response = await fetch(url, {
    headers: { 'User-Agent': 'Mozilla/5.0 (compatible; LinkCardBot/1.0)' },
    signal: controller.signal
  });
  
  clearTimeout(timeout);
  
  if (response.ok) {
    const html = await response.text();
    
    const titleMatch = html.match(/<title[^>]*>([^<]+)<\/title>/i);
    const descriptionMatch =
      html.match(/<meta[^>]*name=['"]description['"][^>]*content=['"]([^'"]+)['"]/i) ||
      html.match(/<meta[^>]*property=['"]og:description['"][^>]*content=['"]([^'"]+)['"]/i);
    const ogImageMatch = html.match(/<meta[^>]*property=['"]og:image['"][^>]*content=['"]([^'"]+)['"]/i);
    const siteNameMatch = html.match(/<meta[^>]*property=['"]og:site_name['"][^>]*content=['"]([^'"]+)['"]/i);
    const faviconMatch = html.match(/<link[^>]*rel=['"](?:shortcut )?icon['"][^>]*href=['"]([^'"]+)['"]/i);
    
    title = titleMatch ? titleMatch[1].trim() : domain;
    description = descriptionMatch ? descriptionMatch[1].trim() : "";
    thumbnail = ogImageMatch ? ogImageMatch[1] : null;
    siteName = siteNameMatch ? siteNameMatch[1].trim() : domain;
    faviconUrl = faviconMatch ? new URL(faviconMatch[1], url).toString() : null;
  }
} catch (error) {
  console.error('リンクカード取得エラー:', error);
}
---

<div class="my-6 w-full">
  <a 
    href={url} 
    target="_blank" 
    rel="noopener noreferrer"
    class="linkcard-container block w-full mx-auto rounded-lg border border-gray-200 dark:border-gray-700 hover:shadow-md transition-shadow duration-200 overflow-hidden bg-white dark:bg-gray-800"
  >
    <div class="w-[35%] bg-gray-100 dark:bg-gray-700 h-full flex justify-center items-center overflow-hidden">
      <img 
        src={thumbnail || "/images/ryokatsu.jpg"} 
        alt="" 
        class="w-full h-full object-contain p-2"
        loading="lazy"
      />
    </div>
    
    <div class="w-[65%] p-5 flex flex-col justify-between h-full">
      <div class="text-lg font-bold text-gray-900 dark:text-gray-100 line-clamp-2 mb-2">
        {title}
      </div>
      
      <div class="text-sm text-gray-600 dark:text-gray-300 line-clamp-3 mb-auto">
        {description || `${domain}のページ`}
      </div>
      
      <div class="flex items-center mt-3 text-xs text-gray-500 dark:text-gray-400">
        {faviconUrl && 
          <img 
            src={faviconUrl} 
            alt="" 
            class="w-4 h-4 mr-2 rounded"
            width="16"
            height="16"
          />
        }
        <span>{siteName}</span>
      </div>
    </div>
  </a>
</div>

<style>
  .linkcard-container {
    display: flex;
    text-decoration: none !important;
    color: inherit;
    height: 180px;
    max-height: 180px;
  }
  
  .linkcard-container:hover {
    text-decoration: none !important;
    color: inherit;
  }
  
  .linkcard-container * {
    text-decoration: none !important;
  }
  
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;  
    overflow: hidden;
  }
  
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;  
    overflow: hidden;
  }
</style> 