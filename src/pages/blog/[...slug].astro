---
import { getCollection } from "astro:content";
import Layout from "../../components/Layout.astro";
import { Image } from "astro:assets";
import TableOfContents from "../../components/TableOfContents.astro";

export const prerender = true;

export async function getStaticPaths() {
	const entries = await getCollection("blog");
	return entries.map((entry) => ({
		params: { slug: entry.slug },
		props: { entry },
	}));
}

const { entry } = Astro.props;
const { Content, headings } = await entry.render();

const assets = await Astro.glob('../../assets/**/*');
const ogImageURLAsset = assets.find(asset => {
  if (!entry.data.ogImageURL) {
    return false;
  }
  if (!asset.default?.src) {
    return false;
  }
  const index = asset.default.src.indexOf('/assets/');
  return asset.default.src.slice(index) === entry.data.ogImageURL;
});
---

<Layout
  title={entry.data.title}
  description={entry.data.description || ""}
  ogType="article"
  image={`/og/${entry.slug.replace(/\//g, '-')}.png`}
  twitterCard={entry.data.twitterCard as "summary" | "summary_large_image" | undefined}
>
  <article>
    <div class="mb-8">
      <a href="/blog" class="text-black dark:text-white underline hover:hover:no-underline flex items-center">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" viewBox="0 0 20 20" fill="currentColor">
          <path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd" />
        </svg>
        記事一覧に戻る
      </a>
    </div>
    {ogImageURLAsset && <div class="flex justify-center items-center"><Image class="mb-4" src={ogImageURLAsset.default} alt="" /></div>}
    <h1 class="text-2xl font-bold">{entry.data.title}</h1>
    
    <div class="flex items-center justify-between my-2">
      <div>
        {entry.data.publishDate && <time>{entry.data.publishDate}</time>}
        {
          entry.data.updatedDate && (
            <span class="ml-4">
              更新日 <time>{entry.data.updatedDate}</time>
            </span>
          )
        }
      </div>
      
      <favorite-button
        data-slug={entry.slug}
        class="p-2 rounded-full transition-colors hover:bg-gray-100 dark:hover:bg-gray-800"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          class="w-6 h-6 text-gray-500 dark:text-gray-400 favorite-icon"
          viewBox="0 0 24 24"
          stroke="currentColor"
          stroke-width="2"
          fill="none"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z"
          />
        </svg>
      </favorite-button>
    </div>
    
    <hr class="my-4" />
    <TableOfContents headings={headings.filter((heading: {depth: number}) => heading.depth >= 2 && heading.depth <= 4)} />
    <div class="container post">
      <Content />
    </div>
  </article>
</Layout>

<script>
  import { registerFavoriteButton } from '../../components/FavoriteButton';
  registerFavoriteButton();
</script>
