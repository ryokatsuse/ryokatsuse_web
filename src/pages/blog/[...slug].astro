---
import { getCollection } from "astro:content";
import Layout from "../../components/Layout.astro";
import { Image } from "astro:assets";
import TableOfContents from "../../components/TableOfContents.astro";

// プロジェクトの現状に合わせて型を定義
export async function getStaticPaths() {
	const entries = await getCollection("blog");
	return entries.map((entry: any) => ({
		params: { slug: entry.slug },
		props: { entry },
	}));
}

const { entry } = Astro.props;
const { Content, headings } = await entry.render();

const assets = await Astro.glob('../../assets/**/*');
const ogImageURLAsset = assets.find(asset => {
  if (!entry.data.ogImageURL) {
    return false;
  }
  if (!asset.default?.src) {
    return false;
  }
  const index = asset.default.src.indexOf('/assets/');
  return asset.default.src.slice(index) === entry.data.ogImageURL;
});
---

<Layout
  title={entry.data.title}
  description={entry.data.description || ""}
  ogType="article"
  image={`/og/${entry.slug.replace(/\//g, '-')}.png`}
  twitterCard={entry.data.twitterCard}
>
  <article>
    {ogImageURLAsset && <div class="flex justify-center items-center"><Image class="mb-4" src={ogImageURLAsset.default} alt="" /></div>}
    <h1 class="text-2xl font-bold">{entry.data.title}</h1>
    {entry.data.publishDate && <time>{entry.data.publishDate}</time>}
    {
      entry.data.updatedDate && (
        <div>
         更新日 <time>{entry.data.updatedDate}</time>
        </div>
      )
    }
    <hr class="my-4" />
    <TableOfContents headings={headings.filter((heading: any) => heading.depth >= 2 && heading.depth <= 4)} />
    <div class="container post">
      <Content />
    </div>
  </article>
</Layout>
